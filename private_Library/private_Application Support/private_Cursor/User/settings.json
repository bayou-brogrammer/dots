{
    "breadcrumbs.enabled": true,
    "diffEditor.codeLens": true,
    "editor.bracketPairColorization.enabled": true,
    "editor.cursorBlinking": "expand",
    "editor.cursorSmoothCaretAnimation": "on",
    "editor.cursorStyle": "line",
    "editor.defaultFormatter": "ibecker.treefmt-vscode",
    "editor.find.autoFindInSelection": "multiline",
    "editor.fontFamily": "'Cascadia Code', 'GoMono Nerd Font', 'CaskaydiaCove Nerd Font', 'Droid Sans Mono', Consolas, 'Courier New', monospace",
    "editor.fontLigatures": true,
    "editor.fontSize": 13,
    "editor.formatOnPaste": false,
    "editor.formatOnType": false,
    "editor.guides.bracketPairs": "active",
    "editor.inlayHints.enabled": "offUnlessPressed",
    "editor.inlineSuggest.suppressSuggestions": true,
    "editor.minimap.enabled": true,
    "editor.minimap.maxColumn": 100,
    "editor.minimap.renderCharacters": false,
    "editor.minimap.showSlider": "always",
    "editor.minimap.size": "fill",
    "editor.renderWhitespace": "boundary",
    "editor.smoothScrolling": true,
    "editor.stickyScroll.enabled": true,
    "editor.suggest.shareSuggestSelections": true,
    "editor.tabSize": 2,
    // "editor.formatOnSave": true, // this will currently make "eslint.codeActionsOnSave.rules" setting not work
    "editor.codeActionsOnSave": {
        "source.fixAll": "always"
    },
    // Explorer
    "explorer.compactFolders": false,
    // Extensions
    "extensions.experimental.affinity": {
        "asvetliakov.vscode-neovim": 1
    },
    // Files
    "files.autoGuessEncoding": true,
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 1000,
    "files.autoSaveWhenNoErrors": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.trimTrailingWhitespace": true,
    "files.exclude": {
        "**/.trunk/*actions/": true,
        "**/.trunk/*logs/": true,
        "**/.trunk/*notifications/": true,
        "**/.trunk/*out/": true,
        "**/.trunk/*plugins/": true
    },
    "files.watcherExclude": {
        "**/.trunk/*actions/": true,
        "**/.trunk/*logs/": true,
        "**/.trunk/*notifications/": true,
        "**/.trunk/*out/": true,
        "**/.trunk/*plugins/": true
    },
    // HTTP
    "http.experimental.systemCertificatesV2": true,
    "http.proxyStrictSSL": false,
    "http.proxySupport": "fallback",
    // SECURITY
    "security.promptForLocalFileProtocolHandling": false,
    "security.workspace.trust.untrustedFiles": "open",
    // Terminal
    "terminal.integrated.scrollback": 10000,
    "terminal.integrated.fontFamily": "CaskaydiaCove Nerd Font Mono",
    // Workbench
    "workbench.colorCustomizations": {
        "tree.indentGuidesStroke": "#999999"
    },
    "workbench.colorTheme": "One Dark Pro Flat",
    "workbench.editor.decorations.colors": true,
    "workbench.editor.pinnedTabSizing": "shrink",
    "workbench.editor.pinnedTabsOnSeparateRow": true,
    "workbench.editor.wrapTabs": true,
    "workbench.tree.enableStickyScroll": true,
    "workbench.tree.indent": 11,
    "workbench.tree.renderIndentGuides": "always",
    // WINDOW
    "window.density.editorTabHeight": "compact",
    "window.newWindowProfile": "Default",
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Commands
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // ESLINT
    "eslint.format.enable": true,
    "eslint.useESLintClass": true,
    // GIT
    "git.autofetch": true,
    "git.autoStash": true,
    "git.enableSmartCommit": true,
    "git.mergeEditor": true,
    "git.useEditorAsCommitInput": false,
    // GITHUB
    "githubPullRequests.pullBranch": "never",
    "gitlens.advanced.messages": {
        "suppressLineUncommittedWarning": true
    },
    "github.copilot.enable": {
        "*": false,
        "plaintext": false,
        "markdown": true,
        "scminput": false
    },
    ///////////////////
    // LANGUAGES
    ///////////////////
    "[dotenv]": {
        "editor.defaultFormatter": "foxundermoon.shell-format"
    },
    "[javascript]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
    "javascript.inlayHints.enumMemberValues.enabled": true,
    "javascript.inlayHints.parameterTypes.enabled": true,
    "javascript.inlayHints.variableTypes.enabled": true,
    "[javascriptreact]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[properties]": {
        "editor.defaultFormatter": "foxundermoon.shell-format"
    },
    "[json]": {
        "editor.quickSuggestions": {
            "strings": true
        },
        "editor.suggest.insertMode": "replace",
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[lua]": {
        "editor.defaultFormatter": "sumneko.lua"
    },
    "Lua.codeLens.enable": true,
    "Lua.workspace.library": [
        "~/.local/share/nvim/lazy/",
        "~/.local/share/nvim/mason"
    ],
    "[markdown]": {
        "editor.unicodeHighlight.invisibleCharacters": true
    },
    "[plaintext]": {
        "editor.unicodeHighlight.invisibleCharacters": true
    },
    "[typescript]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "typescript.inlayHints.enumMemberValues.enabled": true,
    "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
    "typescript.inlayHints.parameterNames.enabled": "all",
    "typescript.inlayHints.parameterTypes.enabled": true,
    "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
    "typescript.inlayHints.variableTypes.enabled": true,
    "[typescriptreact]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Random Extensions
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
    "cursor.aipreview.enabled": true,
    "cursor.cmdk.useThemedDiffBackground": true,
    "cursor.cpp.enablePartialAccepts": true,
    "cursor.diffs.useCharacterLevelDiffs": true,
    "cursorStats.showTotalRequests": true,
    "cursor.cpp.disabledLanguages": [
        "plaintext",
        "scminput"
    ],
    "debug.toolBarLocation": "commandCenter",
    "oneDarkPro.bold": true,
    "notebook.defaultFormatter": "esbenp.prettier-vscode",
    "projectManager.git.baseFolders": [
        "/Users/lecoqjacob/dev/bayer-int/",
        "~/Projects/go"
    ],
    "roo-cline.allowedCommands": [
        "npm test",
        "npm install",
        "tsc",
        "git log",
        "git diff",
        "git show"
    ],
    "totalTypeScript.hideAllTips": false,
    "totalTypeScript.hideBasicTips": true,
    "totalTypeScript.hiddenTips": [
        "typeof",
        "passing-generics-to-types",
        "returntype-utility-type",
        "generic-slots-in-functions",
        "interface-with-generics",
        "record-utility-type",
        "type-alias-with-generics",
        "omit-utility-type",
        "readonly-utility-type",
        "keyof",
        "type-alias-with-multiple-generics",
        "never-keyword",
        "required-utility-type",
        "partial-utility-type",
        "type-predicate",
        "mapped-type",
        "as-const",
        "as-const-on-object",
        "in-operator-narrowing",
        "conditional-type",
        "tuple-type"
    ],
    "[yaml]": {
        "editor.defaultFormatter": "trunk.io"
    },
    "[go]": {
        "editor.defaultFormatter": "golang.go"
    },
    "[go.mod]": {
        "editor.defaultFormatter": "ibecker.treefmt-vscode"
    },
    "redhat.telemetry.enabled": false,
    "[toml]": {
        "editor.defaultFormatter": "tamasfe.even-better-toml"
    },
    "gitlens.ai.model": "vscode",
    "gitlens.ai.vscode.model": "copilot:gpt-4o",
    "zig.zls.enabled": "on",
    "cursor.composer.renderPillsInsteadOfBlocks": true,
    "zig.path": "zig",
    "go.toolsManagement.autoUpdate": true,
    "editor.accessibilitySupport": "off",
    "geminicodeassist.project": "",
    "sync.gist": "101e657df66228bf86f0ecc99c237c86",
    "[rust]": {
        "editor.defaultFormatter": "rust-lang.rust-analyzer"
    },
    "editor.formatOnSave": true,
    "workbench.iconTheme": "vscode-great-icons",
    "[ignore]": {
        "editor.defaultFormatter": "foxundermoon.shell-format"
    },
    "continue.showInlineTip": false
}
